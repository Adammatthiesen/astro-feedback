---
import Code from '../components/Code.astro';
import DemoApiInfo from '../components/demo-components/DemoApiInfo.astro';
import DemoFeedbackForm from '../components/demo-components/DemoFeedbackForm.astro';
import Layout from '../layouts/Layout.astro';
import {
	buildSnippetGet,
	buildSnippetSubmit,
	buildSnippetVote,
	categories,
	sampleWebsite,
} from '../lib/example-data';
---

<Layout title="Feedback API Demo">
  <main class="container mx-auto px-4 py-8 max-w-4xl">
    <h1 class="text-3xl font-bold mb-8 text-center">Astro Feedback API Demo</h1>

      <div class="space-y-8">
        <!-- API Information -->
        <DemoApiInfo {sampleWebsite} />

        <!-- Feedback Submission Form -->
        <DemoFeedbackForm {categories} />

        <!-- Recent Feedback -->
        <section class="bg-white border border-gray-200 p-6 rounded-lg">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold">Recent Feedback</h2>
            <button id="refresh-feedback" class="btn-secondary btn-small">
              Refresh
            </button>
          </div>
          <div id="feedback-list" class="space-y-4">
            Loading feedback...
          </div>
        </section>

        <!-- API Examples -->
        <section class="bg-gray-50 p-6 rounded-lg">
          <h2 class="text-xl font-semibold mb-4">API Examples</h2>
          
          <div class="space-y-6">
            <!-- Submit Feedback -->
            <div>
              <h3 class="font-medium mb-2">Submit Feedback</h3>
              <Code code={buildSnippetSubmit(sampleWebsite, Astro)} />
            </div>

            <!-- Get Feedback -->
            <div>
              <h3 class="font-medium mb-2">Get Feedback</h3>
              <Code code={buildSnippetGet(sampleWebsite, Astro)} />
            </div>

            <!-- Vote on Feedback -->
            <div>
              <h3 class="font-medium mb-2">Vote on Feedback</h3>
              <Code code={buildSnippetVote(sampleWebsite, Astro)} />
            </div>
          </div>
        </section>
      </div>
      
  </main>
</Layout>

<script>
  // Load feedback
  async function loadFeedback() {
    const feedbackList = document.getElementById('feedback-list') as HTMLElement;

    try {
      const result = {"success":true,"data":[{"id":1,"websiteId":1,"categoryId":1,"type":"bug","status":"new","priority":"high","title":"Login button not working on mobile","description":"When I try to click the login button on mobile devices, nothing happens. This issue occurs on both iOS and Android.","email":"user1@example.com","name":"John Doe","url":"https://example.com/login","isPublic":true,"upvotes":5,"downvotes":0,"createdAt":"2025-08-18T14:13:38.000Z","updatedAt":"2025-08-18T14:13:38.000Z","categoryName":"Bug Report"},{"id":2,"websiteId":1,"categoryId":2,"type":"feature","status":"in_review","priority":"medium","title":"Add dark mode support","description":"It would be great to have a dark mode option for better user experience during night time browsing.","email":"user2@example.com","name":"Jane Smith","url":"https://example.com","isPublic":true,"upvotes":12,"downvotes":1,"createdAt":"2025-08-18T14:13:38.000Z","updatedAt":"2025-08-18T14:13:38.000Z","categoryName":"Feature Request"},{"id":3,"websiteId":1,"categoryId":3,"type":"compliment","status":"closed","priority":"low","title":"Great website design!","description":"I love the new design of your website. It looks modern and is very easy to navigate.","email":"user3@example.com","name":"Mike Johnson","url":"https://example.com/about","isPublic":true,"upvotes":8,"downvotes":0,"createdAt":"2025-08-18T14:13:38.000Z","updatedAt":"2025-08-18T14:13:38.000Z","categoryName":"General Feedback"}],"pagination":{"total":3,"page":1,"limit":5,"totalPages":1}};
      
      if (result.success && result.data.length > 0) {
        feedbackList.innerHTML = result.data.map(item => `
          <div class="border border-gray-200 p-4 rounded-md">
            <div class="flex justify-between items-start mb-2">
              <h3 class="font-medium">${item.title}</h3>
              <div class="flex items-center space-x-2 text-sm text-gray-500">
                <span class="badge badge-${item.type}">${item.type}</span>
                <span class="badge badge-${item.status}">${item.status}</span>
              </div>
            </div>
            <p class="text-gray-600 text-sm mb-2">${item.description}</p>
            <div class="flex justify-between items-center text-sm text-gray-500">
              <span>${new Date(item.createdAt).toLocaleDateString()}</span>
              <div class="flex items-center space-x-2">
                <button onclick="vote(${item.id}, 'up')" class="vote-button upvote">
                  <span>üëç</span>
                  <span>${item.upvotes}</span>
                </button>
                <button onclick="vote(${item.id}, 'down')" class="vote-button downvote">
                  <span>üëé</span>
                  <span>${item.downvotes}</span>
                </button>
              </div>
            </div>
          </div>
        `).join('');
      } else {
        feedbackList.innerHTML = '<p class="text-gray-500 text-center py-4">No feedback found.</p>';
      }
    } catch (error) {
      feedbackList.innerHTML = `<p class="text-red-500 text-center py-4">Error loading feedback: ${(error as Error).message}</p>`;
    }
  }

  // Refresh button
  const refreshButton = document.getElementById('refresh-feedback');
  if (refreshButton) {
    refreshButton.addEventListener('click', loadFeedback);
  }

  // Load feedback on page load
  loadFeedback();
</script>

<style>
  pre code {
    white-space: pre-wrap;
    word-break: break-all;
  }
</style>
</Layout>
